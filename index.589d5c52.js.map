{"mappings":"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","sources":["src/genres.json","src/js/findMovies.js"],"sourcesContent":["{\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"},{\"id\":10759,\"name\":\"Action & Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":10762,\"name\":\"Kids\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10763,\"name\":\"News\"},{\"id\":10764,\"name\":\"Reality\"},{\"id\":10765,\"name\":\"Sci-Fi & Fantasy\"},{\"id\":10766,\"name\":\"Soap\"},{\"id\":10767,\"name\":\"Talk\"},{\"id\":10768,\"name\":\"War & Politics\"},{\"id\":37,\"name\":\"Western\"}]}","import { genres } from '../genres.json';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'afc22cf5c573169849cabd6217d3b7d3';\nlet requestMovie = '';\nlet pageNumber = 1;\nlet totalpages = 1;\nlet searchingFlag = false;\n\nconst inputEl = document.querySelector('.header__input');\nconst searchButtonEl = document.querySelector('.search-btn');\nconst movieListEl = document.querySelector('.movie-list');\nconst closeModalBtn = document.querySelector('.modal__button');\nconst paginationBtn = document.querySelectorAll('.pagination-btn');\nconst mainPaginationBtn = document.querySelector('.pagination-btn__main');\nconst arrowLeftBtn = document.querySelector('.pagination-btn__arrow-left');\nconst arrowRightBtn = document.querySelector('.pagination-btn__arrow-right');\n\n\nshowMovies(createCurrentUrl(pageNumber));\n\n\nsearchButtonEl.addEventListener('click', loadMovies);\ninputEl.addEventListener('input', serchingParametr);\nmovieListEl.addEventListener('click', showModal);\ncloseModalBtn.addEventListener('click', () => closeModal());\ndocument.addEventListener(\"keydown\", e => {        \n        if (e.code === 'Escape') {\n            closeModal();\n        }\n});\ndocument.querySelector('.drop-box').addEventListener('click', e => {    \n    if (!document.querySelector('.modal').contains(e.target)) {\n        closeModal();\n    }\n});\narrowLeftBtn.addEventListener('click', () => {\n    if (pageNumber <= 1) {\n        return; \n    }\n    pageNumber -= 1;    \n    if (!searchingFlag){\n        showMovies(createCurrentUrl(pageNumber));\n    } else {\n        showMovies(createSearchingUrl(requestMovie, pageNumber));\n    }    \n    window.scrollTo({ top: 0, behavior: 'smooth' });\n});\narrowRightBtn.addEventListener('click', () => {\n    if (totalpages <= pageNumber) {\n        return;        \n    }\n    pageNumber += 1;    \n    if (!searchingFlag){\n        showMovies(createCurrentUrl(pageNumber));\n    } else {\n        showMovies(createSearchingUrl(requestMovie, pageNumber));\n    }    \n    window.scrollTo({ top: 0, behavior: 'smooth' });\n});\n\nfunction createCurrentUrl(pageNumber) {\n    return `${API_URL}trending/movie/week?api_key=${API_KEY}&page=${pageNumber}`;\n}\n\nfunction createSearchingUrl(requestMovie, pageNumber) {\n    return `${API_URL}search/movie?api_key=${API_KEY}&query=${requestMovie.trim()}&page=${pageNumber}`;\n}\n\nfunction loadMovies(e) {   \n\n    let check = checkforNotFoundNotification(requestMovie.trim().length < 1);\n\n    if (check) {\n        pageNumber = 1;\n        searchingFlag = true;        \n        showMovies(createSearchingUrl(requestMovie, pageNumber));\n    }    \n}\n\nfunction showMovies(url) {\n    fetch(url)\n        .then(response => response.json())\n        .then(movies => {\n            console.log(movies);\n\n            checkforNotFoundNotification(movies.results === undefined || movies.results.length < 1);\n            \n            if (movies.results.length !== 0) {\n                clearPage();                \n                totalpages = movies.total_pages;\n                puginationNumeration(pageNumber, totalpages);                \n                movieListEl.insertAdjacentHTML('beforeend', createMoviesList(movies));              \n            }\n            \n                                \n        })\n        .catch(error => console.log(error));\n}\n\nfunction serchingParametr(e) {\n    requestMovie = e.currentTarget.value;    \n}\n\nfunction createMoviesList(movies) {    \n    return movies.results.map(({ poster_path, id, title, genre_ids, release_date }) => {        \n        return `<li class=\"movie-item\">\n                    <img class=\"movie-img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" data-id=\"${id}\" alt=\"${title}\" width=\"280\">\n                    <h2 class=\"movie-title\">${title}</h2>\n                    <p class=\"movie-description\">${createGenresString(genre_ids)} | ${checkAndCreateDate(release_date)}</p>\n                </li>`;\n    }).join('');\n}\n\nfunction createGenresString(genre_ids) {\n    if (genre_ids.length < 1) {\n        return 'Unknown genre';\n    }\n\n    if (genre_ids.length > 2) {\n        return genre_ids.slice(0, 2).map(id => {\n            for (let i = 0; i < genres.length; i += 1) {\n                if (genres[i].id === id) {\n                    return genres[i].name;\n                }\n            }\n        }).join(', ') + ', others...'; \n    }\n    return genre_ids.map(id => {\n            for (let i = 0; i < genres.length; i += 1) {\n                if (genres[i].id === id) {\n                    return genres[i].name;\n                }\n            }\n        }).join(', ');         \n}\n\nfunction checkAndCreateDate(release_date) {\n    let date = 'Unknown date';\n    if (release_date) {\n        date = release_date.slice(0, 4);\n    }\n\n    return date;\n}\n\nfunction clearPage() {\n    movieListEl.innerHTML = '';\n}\n\nfunction showNotFoundNotification() {\n    document.querySelector('.not-found-notification').classList.remove('disabled');\n}\n\nfunction clearNotFoundNotification() {\n    document.querySelector('.not-found-notification').classList.add('disabled');\n}\n\nfunction checkforNotFoundNotification(flag) {\n    if (flag) {\n        showNotFoundNotification();\n        \n    } else {\n        clearNotFoundNotification();\n    }\n    return document.querySelector('.not-found-notification').classList.contains('disabled');\n}\n\nfunction showModal(e) {\n    if (e.target.nodeName !== 'IMG') {\n        return;\n    }       \n\n    document.querySelector('.drop-box').classList.remove('drop-box--is-hidden');\n\n    let url = `${API_URL}movie/${e.target.dataset.id}?api_key=${API_KEY}`;\n\n    fetch(url)\n        .then(response => response.json())\n        .then(movie => {\n            console.log(movie);      \n            document.querySelector('.modal-thumb').insertAdjacentHTML('beforeend', createModalCard(movie));\n                                            \n        })\n        .catch(error => console.log(error));\n}\n\nfunction closeModal() {\n    document.querySelector('.drop-box').classList.add('drop-box--is-hidden');\n    document.querySelector('.modal-thumb').innerHTML = '';\n}\n\nfunction createModalCard(movie) {    \n    return `<img class=\"modal__img\" src=\"https://image.tmdb.org/t/p/w300${movie.poster_path}\" alt=\"\" width=\"240\">\n                <div class=\"modal__description-thumb\">\n                    <h2 class=\"modal__title\">${movie.title}</h2>\n                    <ul class=\"movie-data\">\n                        <ul class=\"movie-data__name\">\n                            <li>Vote / Votes</li>\n                            <li>Popularity</li>\n                            <li>Original Title</li>\n                            <li>Genre</li>\n                        </ul>\n                    \n                        <ul class=\"movie-data__content\">\n                            <li class=\"movie-data__item\">\n                                <span class=\"movie-votes__first\">${movie.vote_average}</span> / <span class=\"movie-votes__sec\">${movie.vote_count}</span>\n                            </li>\n                            <li class=\"movie-data__item\">\n                                <span class=\"movie-popularity__item\">${movie.popularity}</span>\n                            </li>\n                            <li class=\"movie-data__item\">\n                                <span class=\"movie-orig-title__item\">${movie.original_title}</span>\n                            </li>\n                            <li class=\"movie-data__item\">\n                                <span class=\"movie-genre__item\">${createModalGenresString(movie.genres)}</span>\n                            </li>\n                        </ul>\n                    \n                    </ul>\n                    \n                    <p class=\"movie-about\">About</p>\n                    <p class=\"movie-about-text\">${movie.overview}</p>\n                    <ul class=\"modal-btns\">\n                        <li class=\"modal-btns__item\">\n                            <button class=\"button add-watched-btn\" type=\"button\">Add to Watched</button>\n                        </li>\n                        <li class=\"modal-btns__item\">\n                            <button class=\"button add-queue-btn\" type=\"button\">Add to queue</button>\n                        </li>\n                    </ul>\n                </div>`;\n}\n\nfunction createModalGenresString(genres) {\n    return genres.map(genre => genre.name).join(', '); \n}\n\nfunction puginationNumeration(currentPage, totalpages) {    \n    paginationBtn[0].textContent = currentPage - 4 > 0 ? 1 : '';\n    paginationBtn[1].textContent = currentPage - 4 > 0 ? '...' : '';\n    paginationBtn[2].textContent = currentPage - 2 > 0 ? currentPage - 2 : '';\n    paginationBtn[3].textContent = currentPage - 1 > 0 ? currentPage - 1 : '';\n    mainPaginationBtn.textContent = currentPage;\n    paginationBtn[5].textContent = currentPage + 1 <= totalpages ? currentPage + 1 : '';\n    paginationBtn[6].textContent = currentPage + 2 <= totalpages ? currentPage + 2 : '';\n    paginationBtn[7].textContent = currentPage + 4 <= totalpages ? '...' : '';\n    paginationBtn[8].textContent = currentPage + 4 <= totalpages ? totalpages : '';\n}\n\n"],"names":["$b764a922f00d3234$exports","JSON","parse","$5243d4a293ed14e3$var$API_URL","$5243d4a293ed14e3$var$API_KEY","$5243d4a293ed14e3$var$requestMovie","$5243d4a293ed14e3$var$pageNumber","$5243d4a293ed14e3$var$totalpages","$5243d4a293ed14e3$var$searchingFlag","$5243d4a293ed14e3$var$inputEl","document","querySelector","$5243d4a293ed14e3$var$searchButtonEl","$5243d4a293ed14e3$var$movieListEl","$5243d4a293ed14e3$var$closeModalBtn","$5243d4a293ed14e3$var$paginationBtn","querySelectorAll","$5243d4a293ed14e3$var$mainPaginationBtn","$5243d4a293ed14e3$var$arrowLeftBtn","$5243d4a293ed14e3$var$arrowRightBtn","$5243d4a293ed14e3$var$createCurrentUrl","pageNumber1","concat","$5243d4a293ed14e3$var$createSearchingUrl","requestMovie1","pageNumber2","trim","$5243d4a293ed14e3$var$showMovies","url","fetch","then","response","json","movies","currentPage","totalpages1","console","log","$5243d4a293ed14e3$var$checkforNotFoundNotification","undefined","results","length","innerHTML","total_pages","textContent","insertAdjacentHTML","map","param","poster_path","id","title","genre_ids","release_date","slice","i","genres","name","join","$5243d4a293ed14e3$var$createGenresString","date","$5243d4a293ed14e3$var$checkAndCreateDate","$5243d4a293ed14e3$var$createMoviesList","catch","error","flag","classList","remove","add","contains","$5243d4a293ed14e3$var$closeModal","addEventListener","e","currentTarget","value","target","nodeName","dataset","movie","vote_average","vote_count","popularity","original_title","genres1","genre","overview","$5243d4a293ed14e3$var$createModalCard","code","window","scrollTo","top","behavior"],"version":3,"file":"index.589d5c52.js.map"}