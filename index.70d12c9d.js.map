{"mappings":"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","sources":["src/genres.json","src/js/findMovies.js"],"sourcesContent":["{\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"},{\"id\":10759,\"name\":\"Action & Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":10762,\"name\":\"Kids\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10763,\"name\":\"News\"},{\"id\":10764,\"name\":\"Reality\"},{\"id\":10765,\"name\":\"Sci-Fi & Fantasy\"},{\"id\":10766,\"name\":\"Soap\"},{\"id\":10767,\"name\":\"Talk\"},{\"id\":10768,\"name\":\"War & Politics\"},{\"id\":37,\"name\":\"Western\"}]}","import { genres } from '../genres.json';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'afc22cf5c573169849cabd6217d3b7d3';\nlet requestMovie = '';\nlet pageNumber = 1;\nlet totalpages = 1;\nlet searchingFlag = false;\n\nconst inputEl = document.querySelector('.header__input');\nconst searchButtonEl = document.querySelector('.search-btn');\nconst movieListEl = document.querySelector('.movie-list');\nconst closeModalBtn = document.querySelector('.modal__button');\nconst paginationBtn = document.querySelectorAll('.pagination-btn');\nconst mainPaginationBtn = document.querySelector('.pagination-btn__main');\nconst arrowLeftBtn = document.querySelector('.pagination-btn__arrow-left');\nconst arrowRightBtn = document.querySelector('.pagination-btn__arrow-right');\nconst paginationNumbers = document.querySelector('.pagination-list');\n\n\nshowMovies(createCurrentUrl(pageNumber));\n\n\nsearchButtonEl.addEventListener('click', loadMovies);\ninputEl.addEventListener('input', serchingParametr);\nmovieListEl.addEventListener('click', showModal);\ncloseModalBtn.addEventListener('click', () => closeModal());\ndocument.addEventListener(\"keydown\", e => {        \n        if (e.code === 'Escape') {\n            closeModal();\n        }\n});\ndocument.querySelector('.drop-box').addEventListener('click', e => {    \n    if (!document.querySelector('.modal').contains(e.target)) {\n        closeModal();\n    }\n});\narrowLeftBtn.addEventListener('click', () => {\n    if (pageNumber <= 1) {\n        return; \n    }\n    pageNumber -= 1;    \n    \n    paginationPageChange();\n});\narrowRightBtn.addEventListener('click', () => {\n    if (totalpages <= pageNumber) {\n        return;        \n    }\n    pageNumber = Number.parseInt(pageNumber) + 1;\n    \n    paginationPageChange();\n});\npaginationNumbers.addEventListener('click', e => {\n    if (e.target.nodeName !== 'BUTTON') {\n        return;\n    }\n\n    if (e.target.textContent && e.target.textContent !== '...') {\n        pageNumber = e.target.textContent;\n\n        paginationPageChange();\n    }    \n});\n\n\n\nfunction createCurrentUrl(pageNumber) {\n    return `${API_URL}trending/movie/week?api_key=${API_KEY}&page=${pageNumber}`;\n}\n\nfunction createSearchingUrl(requestMovie, pageNumber) {\n    return `${API_URL}search/movie?api_key=${API_KEY}&query=${requestMovie.trim()}&page=${pageNumber}`;\n}\n\nfunction loadMovies(e) {   \n\n    let check = checkforNotFoundNotification(requestMovie.trim().length < 1);\n\n    if (check) {\n        pageNumber = 1;\n        searchingFlag = true;        \n        showMovies(createSearchingUrl(requestMovie, pageNumber));\n    }    \n}\n\nfunction showMovies(url) {\n    fetch(url)\n        .then(response => response.json())\n        .then(movies => {\n            console.log(movies);\n\n            checkforNotFoundNotification(movies.results === undefined || movies.results.length < 1);\n            \n            if (movies.results.length !== 0) {\n                clearPage();                \n                totalpages = movies.total_pages;\n                puginationNumeration(pageNumber, totalpages);                \n                movieListEl.insertAdjacentHTML('beforeend', createMoviesList(movies));              \n            }\n            \n                                \n        })\n        .catch(error => console.log(error));\n}\n\nfunction serchingParametr(e) {\n    requestMovie = e.currentTarget.value;\n}\n\nfunction createMoviesList(movies) {    \n    return movies.results.map(({ poster_path, id, title, genre_ids, release_date }) => {        \n        return `<li class=\"movie-item\">\n                    <img class=\"movie-img\" src=\"${createImg(poster_path)}\" data-id=\"${id}\" alt=\"${title}\" width=\"280\">\n                    <h2 class=\"movie-title\">${title}</h2>\n                    <p class=\"movie-description\">${createGenresString(genre_ids)} | ${checkAndCreateDate(release_date)}</p>\n                </li>`;\n    }).join('');\n}\n\nfunction createImg(poster_path) {\n    let posterPath = `https://image.tmdb.org/t/p/w300${poster_path}`;\n    if (poster_path === null) {\n        posterPath = 'https://www.prokerala.com/movies/assets/img/no-poster-available.jpg';\n    }\n    return posterPath;\n}\n\nfunction createGenresString(genre_ids) {\n    if (genre_ids.length < 1) {\n        return 'Unknown genre';\n    }\n\n    if (genre_ids.length > 2) {\n        return genre_ids.slice(0, 2).map(id => {\n            for (let i = 0; i < genres.length; i += 1) {\n                if (genres[i].id === id) {\n                    return genres[i].name;\n                }\n            }\n        }).join(', ') + ', others...'; \n    }\n    return genre_ids.map(id => {\n            for (let i = 0; i < genres.length; i += 1) {\n                if (genres[i].id === id) {\n                    return genres[i].name;\n                }\n            }\n        }).join(', ');         \n}\n\nfunction checkAndCreateDate(release_date) {\n    let date = 'Unknown date';\n    if (release_date) {\n        date = release_date.slice(0, 4);\n    }\n\n    return date;\n}\n\nfunction clearPage() {\n    movieListEl.innerHTML = '';\n}\n\nfunction showNotFoundNotification() {\n    document.querySelector('.not-found-notification').classList.remove('disabled');\n}\n\nfunction clearNotFoundNotification() {\n    document.querySelector('.not-found-notification').classList.add('disabled');\n}\n\nfunction checkforNotFoundNotification(flag) {\n    if (flag) {\n        showNotFoundNotification();\n        \n    } else {\n        clearNotFoundNotification();\n    }\n    return document.querySelector('.not-found-notification').classList.contains('disabled');\n}\n\nfunction showModal(e) {\n    if (e.target.nodeName !== 'IMG') {\n        return;\n    }       \n\n    document.querySelector('.drop-box').classList.remove('drop-box--is-hidden');\n\n    let url = `${API_URL}movie/${e.target.dataset.id}?api_key=${API_KEY}`;\n\n    fetch(url)\n        .then(response => response.json())\n        .then(movie => {\n            console.log(movie);      \n            document.querySelector('.modal-thumb').insertAdjacentHTML('beforeend', createModalCard(movie));\n            document.querySelector('body').classList.add('overflow-hidden');\n                                            \n        })\n        .catch(error => console.log(error));\n}\n\nfunction closeModal() {\n    document.querySelector('.drop-box').classList.add('drop-box--is-hidden');\n    document.querySelector('.modal-thumb').innerHTML = '';\n    document.querySelector('body').classList.remove('overflow-hidden');\n}\n\nfunction createModalCard(movie) {    \n    return `<img class=\"modal__img\" src=\"${createImg(movie.poster_path)}\" alt=\"\" width=\"240\">\n                <div class=\"modal__description-thumb\">\n                    <h2 class=\"modal__title\">${movie.title}</h2>\n                    <ul class=\"movie-data\">\n                        <li>\n                            <ul class=\"movie-data__name\">\n                                <li>Vote / Votes</li>\n                                <li>Popularity</li>\n                                <li>Original Title</li>\n                                <li>Genre</li>\n                            </ul>\n                        </li>\n                        <li>\n                            <ul class=\"movie-data__content\">\n                                <li class=\"movie-data__item\">\n                                    <span class=\"movie-votes__first\">${movie.vote_average}</span> / <span class=\"movie-votes__sec\">${movie.vote_count}</span>\n                                </li>\n                                <li class=\"movie-data__item\">\n                                    <span class=\"movie-popularity__item\">${movie.popularity}</span>\n                                </li>\n                                <li class=\"movie-data__item\">\n                                    <span class=\"movie-orig-title__item\">${movie.original_title}</span>\n                                </li>\n                                <li class=\"movie-data__item\">\n                                    <span class=\"movie-genre__item\">${createModalGenresString(movie.genres)}</span>\n                                </li>\n                            </ul>\n                        </li>  \n                    </ul>\n                    \n                    <p class=\"movie-about\">About</p>\n                    <p class=\"movie-about-text\">${movie.overview}</p>\n                    <ul class=\"modal-btns\">\n                        <li class=\"modal-btns__item\">\n                            <button class=\"button add-watched-btn\" type=\"button\">Add to Watched</button>\n                        </li>\n                        <li class=\"modal-btns__item\">\n                            <button class=\"button add-queue-btn\" type=\"button\">Add to queue</button>\n                        </li>\n                    </ul>\n                </div>`;\n}\n\nfunction createModalGenresString(genres) {\n    return genres.map(genre => genre.name).join(', '); \n}\n\nfunction puginationNumeration(currentPage, totalpages) {    \n    paginationBtn[0].textContent = Number.parseInt(currentPage) - 4 > 0 ? 1 : '';\n    paginationBtn[1].textContent = Number.parseInt(currentPage) - 4 > 0 ? '...' : '';\n    paginationBtn[2].textContent = Number.parseInt(currentPage) - 2 > 0 ? Number.parseInt(currentPage) - 2 : '';\n    paginationBtn[3].textContent = Number.parseInt(currentPage) - 1 > 0 ? Number.parseInt(currentPage) - 1 : '';\n    mainPaginationBtn.textContent = Number.parseInt(currentPage);\n    paginationBtn[5].textContent = Number.parseInt(currentPage) + 1 <= Number.parseInt(totalpages) ? Number.parseInt(currentPage) + 1 : '';\n    paginationBtn[6].textContent = Number.parseInt(currentPage) + 2 <= Number.parseInt(totalpages) ? Number.parseInt(currentPage) + 2 : '';\n    paginationBtn[7].textContent = Number.parseInt(currentPage) + 4 <= Number.parseInt(totalpages) ? '...' : '';\n    paginationBtn[8].textContent = Number.parseInt(currentPage) + 4 <= Number.parseInt(totalpages) ? Number.parseInt(totalpages) : '';\n}\n\nfunction paginationPageChange() {\n    if (!searchingFlag){\n            showMovies(createCurrentUrl(pageNumber));\n        } else {\n            showMovies(createSearchingUrl(requestMovie, pageNumber));\n        }    \n        window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n\n"],"names":["$ad23c1da584f1d2d$exports","JSON","parse","$ca6aeb60018b643f$var$requestMovie","$ca6aeb60018b643f$var$pageNumber","$ca6aeb60018b643f$var$totalpages","$ca6aeb60018b643f$var$searchingFlag","$ca6aeb60018b643f$var$inputEl","document","querySelector","$ca6aeb60018b643f$var$searchButtonEl","$ca6aeb60018b643f$var$movieListEl","$ca6aeb60018b643f$var$closeModalBtn","$ca6aeb60018b643f$var$paginationBtn","querySelectorAll","$ca6aeb60018b643f$var$mainPaginationBtn","$ca6aeb60018b643f$var$arrowLeftBtn","$ca6aeb60018b643f$var$arrowRightBtn","$ca6aeb60018b643f$var$paginationNumbers","$ca6aeb60018b643f$var$createCurrentUrl","pageNumber1","$ca6aeb60018b643f$var$createSearchingUrl","requestMovie1","pageNumber2","trim","$ca6aeb60018b643f$var$showMovies","url","fetch","then","response","json","movies","currentPage","totalpages1","console","log","$ca6aeb60018b643f$var$checkforNotFoundNotification","undefined","results","length","innerHTML","total_pages","textContent","Number","parseInt","insertAdjacentHTML","map","poster_path","id","title","genre_ids","release_date","$ca6aeb60018b643f$var$createImg","slice","i","genres","name","join","$ca6aeb60018b643f$var$createGenresString","date","$ca6aeb60018b643f$var$checkAndCreateDate","$ca6aeb60018b643f$var$createMoviesList","catch","error","posterPath","flag","classList","remove","add","contains","$ca6aeb60018b643f$var$closeModal","$ca6aeb60018b643f$var$paginationPageChange","window","scrollTo","top","behavior","addEventListener","e","currentTarget","value","target","nodeName","dataset","movie","vote_average","vote_count","popularity","original_title","genres1","genre","overview","$ca6aeb60018b643f$var$createModalCard","code"],"version":3,"file":"index.70d12c9d.js.map"}